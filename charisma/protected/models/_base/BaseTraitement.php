<?php

/**
 * This is the model base class for the table "traitement".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Traitement".
 *
 * Columns in table "traitement" available as properties of the model,
 * followed by relations of table "traitement" available as properties of the model.
 *
 * @property integer $id
 * @property string $medical_act
 * @property integer $idservice
 * @property integer $type
 * @property integer $transfer
 *
 * @property BillingDetails[] $billingDetails
 * @property Service $idservice0
 */
abstract class BaseTraitement extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'traitement';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Traitement|Traitements', $n);
	}

	public static function representingColumn() {
		return 'medical_act';
	}

	public function rules() {
		return array(
			array('medical_act, idservice, type', 'required'),
			array('idservice, type, transfer', 'numerical', 'integerOnly'=>true),
			array('medical_act', 'length', 'max'=>50),
			//array('transfer', 'default', 'setOnEmpty' => false, 'value' => null),
			array('id, medical_act, idservice, type, transfer', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'billingDetails' => array(self::HAS_MANY, 'BillingDetails', 'idmedical'),
			'idservice0' => array(self::BELONGS_TO, 'Service', 'idservice'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'medical_act' => Yii::t('app', 'Medical Act'),
			'idservice' => null,
			'type' => Yii::t('app', 'Type'),
			'transfer' => Yii::t('app', 'Transfer'),
			'billingDetails' => null,
			'idservice0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('medical_act', $this->medical_act, true);
		$criteria->compare('idservice', $this->idservice);
		$criteria->compare('type', $this->type);
		$criteria->compare('transfer', $this->transfer);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

static function getTypes()
{
return array(
    array('id'=>'1', 'type'=>'Analyse'),
    array('id'=>'2', 'type'=>'Traitement'),
);
}
static function getType($onoff)
{
if($onoff == 1) 
    return 'Analyse';
else 
    return 'Traitement';
}
}