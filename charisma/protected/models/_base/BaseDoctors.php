<?php

/**
 * This is the model base class for the table "doctors".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Doctors".
 *
 * Columns in table "doctors" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $firstname
 * @property string $middlename
 * @property string $lastname
 * @property string $phone
 * @property string $qualification
 * @property string $nationality
 *
 */
abstract class BaseDoctors extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'doctors';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Doctors|Doctors', $n);
	}

	public static function representingColumn() {
		return 'firstname';
	}

	public function rules() {
		return array(
			array('firstname, lastname, phone, qualification', 'required'),
			array('firstname, middlename, lastname, phone', 'length', 'max'=>20),
			array('qualification, nationality', 'length', 'max'=>30),
			array('middlename, nationality', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, firstname, middlename, lastname, phone, qualification, nationality', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'firstname' => Yii::t('app', 'Firstname'),
			'middlename' => Yii::t('app', 'Middlename'),
			'lastname' => Yii::t('app', 'Lastname'),
			'phone' => Yii::t('app', 'Phone'),
			'qualification' => Yii::t('app', 'Qualification'),
			'nationality' => Yii::t('app', 'Nationality'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('middlename', $this->middlename, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('qualification', $this->qualification, true);
		$criteria->compare('nationality', $this->nationality, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}