<?php

/**
 * This is the model base class for the table "billing_details".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BillingDetails".
 *
 * Columns in table "billing_details" available as properties of the model,
 * followed by relations of table "billing_details" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idinvoice
 * @property integer $idmedical
 * @property integer $quantity
 * @property integer $price
 *
 * @property Traitement $idmedical0
 * @property Invoice $idinvoice0
 */
abstract class BaseBillingDetails extends GxActiveRecord {


	public $insurencePrice;
    public $total;
    public $paid;
    public $companyPrice;

    public $idinvoice;
    public $idmedical;
    public $price;
    public $quantity;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'billing_details';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Billing Details|Billing Details', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('idinvoice, idmedical, quantity, price', 'required'),
			array('idinvoice, idmedical, quantity, price', 'numerical', 'integerOnly'=>true),
			array('id, idinvoice, idmedical, quantity, price', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idmedical0' => array(self::BELONGS_TO, 'Traitement', 'idmedical'),
			'idinvoice0' => array(self::BELONGS_TO, 'Invoice', 'idinvoice'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idinvoice' => null,
			'idmedical' => null,
			'quantity' => Yii::t('app', 'Quantity'),
			'price' => Yii::t('app', 'Price'),
			'idmedical0' => null,
			'idinvoice0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		
		$criteria->compare('idinvoice', $this->idinvoice);
		$criteria->compare('idmedical', $this->idmedical);
		$criteria->compare('quantity', $this->quantity);
		$criteria->compare('price', $this->price);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function bill_invoice() {
        
        $criteria=new CDbCriteria;       
        $criteria->select=array('price,quantity,idinvoice,idmedical,id,(price*quantity) total,(price*0.15*quantity) insurencePrice,(price*0.85*quantity) companyPrice');
        $criteria->addCondition('idinvoice='.$_GET['idinvoice']);
	    
	    return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

  public function bill_invoice_accountant($idinvoice) {
        
        $criteria=new CDbCriteria;       
        $criteria->select=array('price,quantity,idinvoice,idmedical,id,(price*quantity) total,(price*0.15*quantity) insurencePrice,(price*0.85*quantity) companyPrice');
        $criteria->addCondition('idinvoice='.$idinvoice);
	    
	    return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	

	public function sum_invoice() {
        
        $criteria=new CDbCriteria;       
        $criteria->select=array('sum(price*0.15*quantity) paid');
        $criteria->addCondition('idinvoice='.$_GET['idinvoice']);
	    
	    return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));



	}
}